name: '2. Build and Deploy Web App'

on: 
  workflow_dispatch:
  push:
    paths:
      - 'App1/docker-nodejs-sample/**'
      
jobs:
    build-and-deploy:
      runs-on: ubuntu-latest
      environment: Development
      steps:
      - name: "checkout"
        uses: actions/checkout@main
        
      - name: 'Login to Azure'
        env:
           AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
        run: |
          echo $AZURE_CREDENTIALS | az login --service-principal --username ${{ secret.CLIENT_ID }} --password ${{ secret.CLIENT_SECRET }} --tenant ${{ secret.TENANT_ID }}

      - name: 'Login via Azure CLI'
        uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}

            
    - name: 'Build and push image'
          uses: azure/docker-login@v1
          with:
            login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
            username: ${{ secrets.REGISTRY_USERNAME }}
            password: ${{ secrets.REGISTRY_PASSWORD }}
        - run: |
            cp -r ./App/sample-web-app/* .
           docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/dssp:${{ github.sha}}
           docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/dssp:${{ github.sha }}
       - name: Set up kubectl
          run: |
            az aks get-credentials --resource-group ${{ secrets.RESOURCE_GROUP }} --name infrarg1

        - name: Create Namespace
          run: |
            kubectl create namespace namespace || echo "Namespace already exists"

        - name: Deploy to AKS
          run: |
            kubectl apply -f deployment.yaml -n namespace
            kubectl set image deployment/dssp dssp=${{ secrets.REGISTRY_LOGIN_SERVER }}/dssp:${{ github.sha }} -n namespace
            kubectl rollout status deployment/dssp -n namespace
      
